{"ast":null,"code":"var _jsxFileName = \"/Users/nipunchamodya/vintage-jotter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// A simple function to generate a unique ID\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateId = () => `id_${new Date().getTime()}`;\nfunction App() {\n  _s();\n  // State to hold the list of all tasks\n  const [tasks, setTasks] = useState([]);\n\n  // State for the form inputs\n  const [title, setTitle] = useState('');\n  const [creatorName, setCreatorName] = useState('');\n  const [description, setDescription] = useState('');\n\n  // --- Data Persistence using localStorage ---\n\n  // On the very first load, get saved tasks from localStorage\n  useEffect(() => {\n    const savedTasks = localStorage.getItem('vintage_tasks');\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []); // The empty array [] means this effect runs only once\n\n  // Whenever the 'tasks' state changes, save it back to localStorage\n  useEffect(() => {\n    localStorage.setItem('vintage_tasks', JSON.stringify(tasks));\n  }, [tasks]); // This effect runs every time the 'tasks' array is modified\n\n  // --- Task Management Functions ---\n\n  const handleAddTask = e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    if (!title || !creatorName) {\n      alert('Please fill in a title and your name!');\n      return;\n    }\n    const newTask = {\n      id: generateId(),\n      title,\n      description,\n      creatorName,\n      isCompleted: false,\n      createdAt: new Date().toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      })\n    };\n    setTasks([newTask, ...tasks]); // Add new task to the start of the list\n\n    // Clear the form fields after submission\n    setTitle('');\n    setCreatorName('');\n    setDescription('');\n  };\n  const handleDeleteTask = idToDelete => {\n    // Create a new array that excludes the task with the matching ID\n    setTasks(tasks.filter(task => task.id !== idToDelete));\n  };\n  const toggleTaskCompletion = idToToggle => {\n    // Create a new array where the matching task's 'isCompleted' status is flipped\n    setTasks(tasks.map(task => task.id === idToToggle ? {\n      ...task,\n      isCompleted: !task.isCompleted\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Community Notice Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your daily docket for team tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a New Notice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Notice Title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your Name\",\n            value: creatorName,\n            onChange: e => setCreatorName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Description (optional)\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Pin to Board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-item ${task.isCompleted ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"creator-info\",\n              children: [\"Posted by: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: task.creatorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 58\n              }, this), \" on \", task.createdAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleTaskCompletion(task.id),\n              children: task.isCompleted ? 'Mark Incomplete' : 'Mark Complete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDeleteTask(task.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-tasks-message\",\n          children: \"The notice board is clear!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tSb57QhQjsb+MN6cihSJJkeB4Yo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateId","Date","getTime","App","_s","tasks","setTasks","title","setTitle","creatorName","setCreatorName","description","setDescription","savedTasks","localStorage","getItem","JSON","parse","setItem","stringify","handleAddTask","e","preventDefault","alert","newTask","id","isCompleted","createdAt","toLocaleDateString","month","day","year","handleDeleteTask","idToDelete","filter","task","toggleTaskCompletion","idToToggle","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","length","onClick","_c","$RefreshReg$"],"sources":["/Users/nipunchamodya/vintage-jotter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// A simple function to generate a unique ID\nconst generateId = () => `id_${new Date().getTime()}`;\n\nfunction App() {\n  // State to hold the list of all tasks\n  const [tasks, setTasks] = useState([]);\n  \n  // State for the form inputs\n  const [title, setTitle] = useState('');\n  const [creatorName, setCreatorName] = useState('');\n  const [description, setDescription] = useState('');\n\n  // --- Data Persistence using localStorage ---\n\n  // On the very first load, get saved tasks from localStorage\n  useEffect(() => {\n    const savedTasks = localStorage.getItem('vintage_tasks');\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []); // The empty array [] means this effect runs only once\n\n  // Whenever the 'tasks' state changes, save it back to localStorage\n  useEffect(() => {\n    localStorage.setItem('vintage_tasks', JSON.stringify(tasks));\n  }, [tasks]); // This effect runs every time the 'tasks' array is modified\n\n  // --- Task Management Functions ---\n\n  const handleAddTask = (e) => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    if (!title || !creatorName) {\n      alert('Please fill in a title and your name!');\n      return;\n    }\n\n    const newTask = {\n      id: generateId(),\n      title,\n      description,\n      creatorName,\n      isCompleted: false,\n      createdAt: new Date().toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      }),\n    };\n\n    setTasks([newTask, ...tasks]); // Add new task to the start of the list\n\n    // Clear the form fields after submission\n    setTitle('');\n    setCreatorName('');\n    setDescription('');\n  };\n\n  const handleDeleteTask = (idToDelete) => {\n    // Create a new array that excludes the task with the matching ID\n    setTasks(tasks.filter(task => task.id !== idToDelete));\n  };\n  \n  const toggleTaskCompletion = (idToToggle) => {\n    // Create a new array where the matching task's 'isCompleted' status is flipped\n    setTasks(\n      tasks.map(task =>\n        task.id === idToToggle ? { ...task, isCompleted: !task.isCompleted } : task\n      )\n    );\n  };\n\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>The Community Notice Board</h1>\n        <p>Your daily docket for team tasks.</p>\n      </header>\n\n      <main>\n        <div className=\"form-card\">\n          <h2>Add a New Notice</h2>\n          <form onSubmit={handleAddTask}>\n            <input\n              type=\"text\"\n              placeholder=\"Notice Title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Your Name\"\n              value={creatorName}\n              onChange={(e) => setCreatorName(e.target.value)}\n              required\n            />\n            <textarea\n              placeholder=\"Description (optional)\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></textarea>\n            <button type=\"submit\">Pin to Board</button>\n          </form>\n        </div>\n\n        <div className=\"task-list\">\n          {tasks.length > 0 ? (\n            tasks.map(task => (\n              <div\n                key={task.id}\n                className={`task-item ${task.isCompleted ? 'completed' : ''}`}\n              >\n                <div className=\"task-content\">\n                  <h3>{task.title}</h3>\n                  <p className=\"creator-info\">Posted by: <strong>{task.creatorName}</strong> on {task.createdAt}</p>\n                  {task.description && <p>{task.description}</p>}\n                </div>\n                <div className=\"task-actions\">\n                  <button onClick={() => toggleTaskCompletion(task.id)}>\n                    {task.isCompleted ? 'Mark Incomplete' : 'Mark Complete'}\n                  </button>\n                  <button className=\"delete-btn\" onClick={() => handleDeleteTask(task.id)}>\n                    Remove\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-tasks-message\">The notice board is clear!</p>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}