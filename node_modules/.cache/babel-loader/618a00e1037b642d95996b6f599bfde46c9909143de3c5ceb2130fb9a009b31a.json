{"ast":null,"code":"var _jsxFileName = \"/Users/nipunchamodya/vintage-jotter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// A simple function to generate a unique ID\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateId = () => `id_${new Date().getTime()}`;\nfunction App() {\n  _s();\n  // State to hold the list of all tasks\n  const [tasks, setTasks] = useState([]);\n\n  // State for the form inputs\n  const [title, setTitle] = useState('');\n  const [creatorName, setCreatorName] = useState(''); // Kept for potential future use, but not displayed in this design\n  const [description, setDescription] = useState(''); // Kept for potential future use, but not displayed\n\n  // State to control the modal visibility\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // --- Data Persistence using localStorage ---\n\n  // On the very first load, get saved tasks from localStorage\n  useEffect(() => {\n    const savedTasks = localStorage.getItem('minimalist_tasks');\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []); // The empty array [] means this effect runs only once\n\n  // Whenever the 'tasks' state changes, save it back to localStorage\n  useEffect(() => {\n    localStorage.setItem('minimalist_tasks', JSON.stringify(tasks));\n  }, [tasks]); // This effect runs every time the 'tasks' array is modified\n\n  // --- Task Management Functions ---\n\n  const handleAddTask = e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    if (!title) {\n      alert('Please fill in a title for the task!');\n      return;\n    }\n    const newTask = {\n      id: generateId(),\n      title,\n      isCompleted: false\n    };\n    setTasks([newTask, ...tasks]); // Add new task to the start of the list\n\n    // Clear the form fields and close the modal\n    setTitle('');\n    setIsModalOpen(false); // Close modal on submit\n  };\n  const handleDeleteTask = idToDelete => {\n    // Create a new array that excludes the task with the matching ID\n    setTasks(tasks.filter(task => task.id !== idToDelete));\n  };\n  const toggleTaskCompletion = idToToggle => {\n    // Create a new array where the matching task's 'isCompleted' status is flipped\n    setTasks(tasks.map(task => task.id === idToToggle ? {\n      ...task,\n      isCompleted: !task.isCompleted\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add a new todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddTask,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter task...\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              required: true,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-notice-btn\",\n        onClick: () => setIsModalOpen(true),\n        children: \"+ Add New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-item ${task.isCompleted ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-content\",\n            onClick: () => toggleTaskCompletion(task.id),\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleTaskCompletion(task.id),\n              children: task.isCompleted ? 'Undo' : 'Complete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-tasks-message\",\n          children: \"Your task list is empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Your remaining todos : \", tasks.filter(task => !task.isCompleted).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote\",\n        children: \"\\\"Doing what you love is the cornerstone of having abundance in your life.\\\" - Wayne Dyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pBp8cB/vDf42x42A3d0AGLuK0C0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateId","Date","getTime","App","_s","tasks","setTasks","title","setTitle","creatorName","setCreatorName","description","setDescription","isModalOpen","setIsModalOpen","savedTasks","localStorage","getItem","JSON","parse","setItem","stringify","handleAddTask","e","preventDefault","alert","newTask","id","isCompleted","handleDeleteTask","idToDelete","filter","task","toggleTaskCompletion","idToToggle","map","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","autoFocus","length","_c","$RefreshReg$"],"sources":["/Users/nipunchamodya/vintage-jotter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// A simple function to generate a unique ID\nconst generateId = () => `id_${new Date().getTime()}`;\n\nfunction App() {\n  // State to hold the list of all tasks\n  const [tasks, setTasks] = useState([]);\n  \n  // State for the form inputs\n  const [title, setTitle] = useState('');\n  const [creatorName, setCreatorName] = useState(''); // Kept for potential future use, but not displayed in this design\n  const [description, setDescription] = useState(''); // Kept for potential future use, but not displayed\n\n  // State to control the modal visibility\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // --- Data Persistence using localStorage ---\n\n  // On the very first load, get saved tasks from localStorage\n  useEffect(() => {\n    const savedTasks = localStorage.getItem('minimalist_tasks');\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []); // The empty array [] means this effect runs only once\n\n  // Whenever the 'tasks' state changes, save it back to localStorage\n  useEffect(() => {\n    localStorage.setItem('minimalist_tasks', JSON.stringify(tasks));\n  }, [tasks]); // This effect runs every time the 'tasks' array is modified\n\n  // --- Task Management Functions ---\n\n  const handleAddTask = (e) => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    if (!title) {\n      alert('Please fill in a title for the task!');\n      return;\n    }\n\n    const newTask = {\n      id: generateId(),\n      title,\n      isCompleted: false,\n    };\n\n    setTasks([newTask, ...tasks]); // Add new task to the start of the list\n\n    // Clear the form fields and close the modal\n    setTitle('');\n    setIsModalOpen(false); // Close modal on submit\n  };\n\n  const handleDeleteTask = (idToDelete) => {\n    // Create a new array that excludes the task with the matching ID\n    setTasks(tasks.filter(task => task.id !== idToDelete));\n  };\n  \n  const toggleTaskCompletion = (idToToggle) => {\n    // Create a new array where the matching task's 'isCompleted' status is flipped\n    setTasks(\n      tasks.map(task =>\n        task.id === idToToggle ? { ...task, isCompleted: !task.isCompleted } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* --- MODAL FOR ADDING A NEW TASK --- */}\n      {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <button className=\"close-button\" onClick={() => setIsModalOpen(false)}>×</button>\n            <div className=\"form-card\">\n              <h2>Add a new todo</h2>\n              <form onSubmit={handleAddTask}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter task...\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                  autoFocus\n                />\n                <button type=\"submit\">Add Task</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <header className=\"app-header\">\n        <h1>Todo App</h1>\n        <button className=\"add-notice-btn\" onClick={() => setIsModalOpen(true)}>\n          + Add New Todo\n        </button>\n      </header>\n\n      <main>\n        <div className=\"task-list\">\n          {tasks.length > 0 ? (\n            tasks.map(task => (\n              <div\n                key={task.id}\n                className={`task-item ${task.isCompleted ? 'completed' : ''}`}\n              >\n                {/* This div handles the click to toggle completion */}\n                <div className=\"task-content\" onClick={() => toggleTaskCompletion(task.id)}>\n                  <h3>{task.title}</h3>\n                </div>\n\n                {/* The original toggle button is now hidden by CSS but kept for accessibility */}\n                <div className=\"task-actions\">\n                  <button onClick={() => toggleTaskCompletion(task.id)}>\n                    {task.isCompleted ? 'Undo' : 'Complete'}\n                  </button>\n                </div>\n                \n                <button className=\"delete-btn\" onClick={() => handleDeleteTask(task.id)}>\n                  ×\n                </button>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-tasks-message\">Your task list is empty.</p>\n          )}\n        </div>\n      </main>\n\n      {/* --- FOOTER SECTION WITH COUNTER --- */}\n      <div className=\"footer-info\">\n        <p>\n          <strong>\n            Your remaining todos : {tasks.filter(task => !task.isCompleted).length}\n          </strong>\n        </p>\n        <p className=\"quote\">\n          \"Doing what you love is the cornerstone of having abundance in your life.\" - Wayne Dyer\n        </p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}